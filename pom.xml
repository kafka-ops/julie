<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.purbon.kafka</groupId>
  <artifactId>kafka-topology-builder</artifactId>
  <version>2.0.0-b.0</version>

  <name>A Kafka topology builder tool</name>
  <description>
    A helper project for Kafka Platform teams to build an automated Topic, Configuration (and Schemas in the future)
    Management solution.
  </description>
  <url>https://github.com/purbon/</url>

  <organization>
    <name>Pere Urbon</name>
    <url>https://github.com/purbon/</url>
  </organization>

  <profiles>
    <profile>
      <id>failsafe</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <configuration>
              <includes>
                <include>**/*IT</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>acls</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <executions>
              <execution>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <trimStackTrace>false</trimStackTrace>
                  <excludes>
                    <exclude>**/*RbacIT</exclude>
                  </excludes>
                  <includes>
                    <include>**/*IT</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>rbac</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <executions>
              <execution>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <trimStackTrace>false</trimStackTrace>
                  <excludes>
                    <exclude>none</exclude>
                  </excludes>
                  <includes>
                    <include>**/*RbacIT</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <style>google</style>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <configuration>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.purbon.kafka.topology.BuilderCLI</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
          <archive>
            <manifest>
              <mainClass>com.purbon.kafka.topology.BuilderCLI</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <!--<phase>package</phase>-->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven-site-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <!-- default target/jacoco/site/* -->
            <configuration>
              <outputDirectory>target/jacoco-report</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>${rpm-maven-plugin.version}</version>
        <!--<executions>
          <execution>
            <id>generate-rpm</id>
            <goals>
              <goal>>attached-rpm</goal>
            </goals>
          </execution>
        </executions>-->
        <configuration>
          <license>MIT (c) 2019, Pere Urbon</license>
          <distribution>Trash 2019</distribution>
          <group>Application/Collectors</group>
          <packager>Pere Urbon</packager>
          <prefix>/usr/local</prefix>
          <!--<changelogFile>changelog.md</changelogFile>-->
          <defineStatements>
            <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
          </defineStatements>
          <mappings>
            <mapping>
              <directory>/usr/local/kafka-topology-builder/bin</directory>
              <filemode>440</filemode>
              <username>ktb-kafka</username>
              <groupname>ktb-kafka</groupname>
              <sources>
                <source>
                  <location>target/kafka-topology-builder.jar</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/local/kafka-topology-builder/bin</directory>
              <filemode>775</filemode>
              <username>ktb-kafka</username>
              <groupname>ktb-kafka</groupname>
              <sources>
                <source>
                  <location>src/main/scripts/kafka-topology-builder.sh</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/local/kafka-topology-builder/conf</directory>
              <configuration>true</configuration>
              <filemode>640</filemode>
              <username>ktb-kafka</username>
              <groupname>ktb-kafka</groupname>
              <sources>
                <source>
                  <location>src/main/conf</location>
                </source>
              </sources>
            </mapping>
          </mappings>
          <preinstallScriptlet>
            <scriptFile>src/main/scripts/preinstall.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
            <filter>true</filter>
          </preinstallScriptlet>
          <postremoveScriptlet>
            <scriptFile>src/main/scripts/remove.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
            <filter>true</filter>
          </postremoveScriptlet>
          <postinstallScriptlet>
            <scriptFile>src/main/scripts/postinstall.sh</scriptFile>
            <fileEncoding>utf-8</fileEncoding>
            <filter>true</filter>
          </postinstallScriptlet>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.vafer</groupId>
        <artifactId>jdeb</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <verbose>true</verbose>
              <controlDir>${basedir}/src/deb/control</controlDir>
              <dataSet>
                <data>
                  <src>${project.basedir}/target/kafka-topology-builder.jar</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/kafka-topology-builder/bin</prefix>
                    <user>ktb-kafka</user>
                    <group>ktb-kafka</group>
                    <filemode>440</filemode>
                  </mapper>
                </data>

                <data>
                  <src>${basedir}/src/main/scripts/kafka-topology-builder.sh</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/kafka-topology-builder/bin</prefix>
                    <user>ktb-kafka</user>
                    <group>ktb-kafka</group>
                    <filemode>755</filemode>
                  </mapper>
                </data>

                <data>
                  <src>${basedir}/src/main/conf</src>
                  <type>directory</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/kafka-topology-builder/conf</prefix>
                    <filemode>755</filemode>
                    <user>ktb-kafka</user>
                    <group>ktb-kafka</group>
                  </mapper>
                </data>
              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <rulesets>
            <!-- A rule set, that comes bundled with PMD -->
            <ruleset>/category/java/bestpractices.xml</ruleset>
            <ruleset>/category/java/design.xml</ruleset>
            <ruleset>category/java/codestyle.xml</ruleset>
            <ruleset>category/java/documentation.xml</ruleset>
            <ruleset>category/java/errorprone.xml</ruleset>
            <ruleset>category/java/multithreading.xml</ruleset>
            <ruleset>category/java/performance.xml</ruleset>
            <ruleset>category/java/security.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>

        <configuration>
          <xmlOutput>true</xmlOutput>
          <!-- Optional directory to put spotbugs xdoc xml report -->
          <xmlOutputDirectory>target/site</xmlOutputDirectory>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- plugins -->
    <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
    <spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>
    <maven-site-plugin.version>3.9.0</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <rpm-maven-plugin.version>2.2.0</rpm-maven-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <!-- dependencies -->
    <jackson.version>2.10.3</jackson.version>
    <kafka.version>2.4.1</kafka.version>
    <log4j.version>2.13.3</log4j.version>
    <httpclient.version>4.5.11</httpclient.version>
    <zookeeper.version>3.5.7</zookeeper.version>
    <commons.version>1.4</commons.version>
    <mockito.version>3.6.0</mockito.version>
    <junit.version>4.13.1</junit.version>
    <testcontainers.version>1.15.0</testcontainers.version>
    <jedis.version>3.2.0</jedis.version>
    <confluent.version>5.5.0</confluent.version>
    <confluent-ce.version>5.5.1-ce</confluent-ce.version>
    <avro.version>1.9.2</avro.version>
    <jersey.version>2.22.2</jersey.version>
    <hamcrest.version>2.2</hamcrest.version>
    <assertj.version>3.15.0</assertj.version>
    <jinjava.version>2.5.4</jinjava.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.hubspot.jinjava</groupId>
      <artifactId>jinjava</artifactId>
      <version>${jinjava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry-client</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>${zookeeper.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-client-plugins</artifactId>
      <version>${confluent-ce.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
