topology {
  acls {
    optimized = false
  }
  file {
    type = "YAML"
  }
  features {
    experimental = false
  }
  validations = []
  translation {
     principal.enabled = false
   }
  builder {
    access.control.class = "com.purbon.kafka.topology.roles.SimpleAclsProvider"
    mds {
        server = "http://localhost:8090"
        valid.cluster.ids = []
        allow.insecure = false
    }
    state {
      processor.class = "com.purbon.kafka.topology.backend.FileBackend"
    }
    redis {
      host = "localhost"
      port = "6379"
      bucket = "julie.ops.state"
    }
  }
  topic {
    dlq {
      prefix {
         format = "default"
      }
      label = "dlq"
    }
    prefix {
      format = "default"
      separator = "."
    }
    managed.prefixes = []
  }
  subject {
    managed.prefixes = []
  }
  project {
    prefix {
      format = "default"
    }
  }
  connector {
    allow {
      topic.create = true
    }
  }
  state {
     cluster.enabled = false
     topics {
        cluster.enabled = true
     }
  }
  service {
    accounts {
      managed.prefixes = []
    }
  }
  group {
    managed.prefixes = []
  }

  dlq {
    topics {
       generate = false
       allow.list = []
       deny.list = []
    }
  }
}

schema {
  registry {
    url = "mock://"
  }
}

julie {
    s3 {
      endpoint = ""
    }
    multiple.context.per.dir.enabled = false
    kafka.config.topic = "__julieops_commands"
    kafka.config.topic = ${?JULIE_KAFKA_CONFIG_TOPIC}
    instance.id = ${?JULIE_INSTANCE_ID}
    kafka.consumer.group.id = "julieops"
    kafka.consumer.group.id = ${?JULIE_KAFKA_CONSUMER_GROUP_ID}
    kafka.consumer.retries = 3
    enable.principal.management = false
    enable.principal.management = ${?JULIE_ENABLE_PRINCIPAL_MANAGEMENT}

    verify.remote.state = false
    verify.remote.state = ${?JULIE_VERIFY_REMOTE_STATE}


    audit {
       enabled = false
       enabled = ${?JULIE_AUDIT_ENABLED}
       appender {
           class = "com.purbon.kafka.topology.audit.StdoutAppender"
           kafka {
               topic = "_julieops_audit_log"
           }
       }
    }

    debug.mode = false
    debug.mode = ${?JULIE_DEBUG_MODE}

    http {
        retry {
            times = 20
            backoff.time.ms = 20000 // 20s
        }
    }
}

confluent {
  monitoring.topic = "_confluent-monitoring"
  command.topic = "_confluent-command"
  metrics.topic = "_confluent-metrics"
}

ccloud {
    service_account {
        translation.enabled = true
        query.page.size = 100
    }
}

kafka {
  internal {
      topic.prefixes = [ "_" ]
   }
}

platform {
   servers {
       connect = []
       basic.auth = []
   }
}

allow {
  delete {
    topics = false
    topics = ${?ALLOW_DELETE_TOPICS}
    bindings = false
    bindings = ${?ALLOW_DELETE_BINDINGS}
    principals = false
    principals = ${?ALLOW_DELETE_PRINCIPALS}
    artefacts {
        connect = false
        connect = ${?ALLOW_DELETE_ARTEFACTS_CONNECT}
        ksql = false
        ksql = ${?ALLOW_DELETE_ARTEFACTS_KSQL}
    }
  }
}
validations {
    replication.factor {
        op = "ne"
    }

    partition.number {
        op = "gte"
        value = 3
    }
}